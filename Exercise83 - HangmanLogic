import java.util.ArrayList;
       
public class HangmanLogic {

    private String word;
    private String guessedLetters;
    private int numberOfFaults;
    private ArrayList<String> hiddenWordArray;

    public HangmanLogic(String word) {
        this.word = word.toUpperCase();
        this.guessedLetters = "";
        this.numberOfFaults = 0;
        this.hiddenWordArray = new ArrayList<String>();
    }

    public int numberOfFaults() {
        return this.numberOfFaults;
    }

    public String guessedLetters() {
        return this.guessedLetters;
    }

    public int losingFaultAmount() {
        return 12;
    }

    public void guessLetter(String letter) {
        // program here the functionality for making a guess

        // if the letter has already been guessed, nothing happens

        // it the word does not contains the guessed letter, number of faults increase
        // the letter is added among the already guessed letters
        
        if(this.word.contains(letter) != true)
            {
                if(this.guessedLetters.contains(letter)!= true)
                {
                    this.numberOfFaults += 1;
                }
            }
        
        if(this.guessedLetters.contains(letter) != true)
                {
                    this.guessedLetters += letter;
                }
    }

    public String hiddenWord() {
        // program here the functionality for building the hidden word

        // create the hidden word by interating through this.word letter by letter
        // if the letter in turn is within the guessed words, put it in to the hidden word
        // if the letter is not among guessed, replace it with _ in the hidden word
        
        
        String hiddenWord = "";
        
        int hiddenWordIndexIterator = 0;
        
        while(hiddenWordIndexIterator < this.word.length())
            {
              this.hiddenWordArray.add(this.word.charAt(hiddenWordIndexIterator)+"");
              hiddenWordIndexIterator += 1;
            }
        
        for(String iterator: this.hiddenWordArray)
            {
                if(this.guessedLetters.contains(iterator) == true)
                    {
                        hiddenWord += iterator;
                    }
                else
                    {
                        hiddenWord += "_";
                    }
            }

        // return the hidden word at the end
        return hiddenWord;
    }
}
