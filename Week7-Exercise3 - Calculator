import java.util.ArrayList;

public class Calculator {
    private Reader reader;
    private int operationsCount;
    
    public Calculator()
        {
            this.reader = new Reader();
            
            this.operationsCount = 0;
           
        }
    
    public void start()
        {
            String command = "";
            
            while(true)
                {
                    System.out.print("command: ");
                    command = this.reader.readString();
                    
                    if(command.equalsIgnoreCase("end"))
                        {
                            this.statistics();
                            break;
                        }
                    
                    if(command.equalsIgnoreCase("sum"))
                        {
                            this.sum();
                        }
                    
                    else if(command.equalsIgnoreCase("difference"))
                        {
                            this.difference();
                        }
                    
                    else if(command.equalsIgnoreCase("product"))
                        {
                            this.product();
                        }
                    
                }
        }
    
    private void difference()
        {
            this.operationsCount();
            
            ArrayList<Integer> userIntegers = this.userIntegers();
         
            //operation result is initialized as first value in ArrayList
            int currentResult = userIntegers.get(0);
            
            for(int i = 0; i < userIntegers.size();i += 1 )
                {
                    if(i != 0)
                        {
                            currentResult -= userIntegers.get(i);
                        }
                }
            
            int difference = currentResult;
           
            
            System.out.println("difference of the values " + difference);
        
        }
    
    private void sum()
        {
            this.operationsCount();
            
           ArrayList<Integer> userIntegers = this.userIntegers();
         
            //operation result is initialized as first value in ArrayList
            int currentResult = userIntegers.get(0);
            
            for(int i = 0; i < userIntegers.size();i += 1 )
                {
                    if(i != 0)
                        {
                            currentResult += userIntegers.get(i);
                        }
                }
            
            int sum = currentResult;
            
            System.out.println("sum of the values " + sum);
        }
    
    private void product()
        {
            this.operationsCount();
            
           ArrayList<Integer> userIntegers = this.userIntegers();
         
            //operation result is initialized as first value in ArrayList
            int currentResult = userIntegers.get(0);
            
            for(int i = 0; i < userIntegers.size();i += 1 )
                {
                    if(i != 0)
                        {
                            currentResult *= userIntegers.get(i);
                        }
                }
            
            int product = currentResult;
            
            System.out.println("product of the values " + product);
        }
    
    private void operationsCount()
        {
            this.operationsCount += 1;
        }
    
    private int operationsCountReturn()
        {
            return this.operationsCount;
        }
    
    private void statistics()
        {
            System.out.println("Calculations done " + this.operationsCountReturn());
        }
    
   private ArrayList<Integer> userIntegers()
        {
            ArrayList<Integer> userIntegers = new ArrayList<Integer>();
            
            System.out.print("Value1: ");
            userIntegers.add(this.reader.readInteger());
            
            System.out.print("Value2: ");
            userIntegers.add(this.reader.readInteger());
            
            return userIntegers;
            
        }
}
